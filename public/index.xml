<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jam Polintan</title>
    <link>https://jamvie.net/</link>
    <description>Recent content on Jam Polintan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC Attribution-NonCommercial 4.0 International License</copyright>
    <lastBuildDate>Tue, 14 Jul 2020 00:22:00 -0600</lastBuildDate>
    
	<atom:link href="https://jamvie.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cryptography and P vs. NP: A Basic Outline</title>
      <link>https://jamvie.net/post/11pvsnp/</link>
      <pubDate>Tue, 14 Jul 2020 00:22:00 -0600</pubDate>
      
      <guid>https://jamvie.net/post/11pvsnp/</guid>
      <description>Comic from XKCD.
I am not an expert in either cryptography nor algorithm analysis. However, ever since a very rewarding advanced algorithm analysis class, one question has always dwelled in my mind: what would &amp;ldquo;P=NP&amp;rdquo; mean for cryptography? I had heard that such a statement, &amp;ldquo;P=NP&amp;rdquo; is controversial in the world of security. Learning about algorithm complexity has certainly shed quite a bit of light on the topic. As a cybersecurity researcher, I was compelled to satisfy my curiosity and answer that question for myself.</description>
    </item>
    
    <item>
      <title>RedPwnCTF 2020, Part 3</title>
      <link>https://jamvie.net/post/10redpwn2020_03/</link>
      <pubDate>Thu, 02 Jul 2020 01:56:16 -0600</pubDate>
      
      <guid>https://jamvie.net/post/10redpwn2020_03/</guid>
      <description>Part 3 of my writeup series for RedPwnCTF 2020! I checked out the web challenge known as &amp;ldquo;Viper&amp;rdquo;.
Let&amp;rsquo;s Begin! Snakes are my favourite animal. And now, you can easily create ASCII-text snakes with the handy services provided by RedPwn:
When we create our viper, its name is its viperId, which is a UUID.
The source code is available for us in this challenge as well. The main file, server.js, defines multiple endpoints - but the one that caught my eye immediately was GET /admin/create.</description>
    </item>
    
    <item>
      <title>RedPwnCTF 2020, part 2</title>
      <link>https://jamvie.net/post/09redpwn2020_02/</link>
      <pubDate>Sun, 28 Jun 2020 21:19:19 -0600</pubDate>
      
      <guid>https://jamvie.net/post/09redpwn2020_02/</guid>
      <description>Part 2 of my writeup series for RedPwnCTF 2020!
Let&amp;rsquo;s Begin! Tux-Fanpage  points: 464  Ignoring the 1990&amp;rsquo;s aesthetic of the page, observe the provided script:
const express = require(&amp;#39;express&amp;#39;) const path = require(&amp;#39;path&amp;#39;) const app = express() //Don&amp;#39;t forget to redact from published source const flag = &amp;#39;[REDACTED]&amp;#39; app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; { res.redirect(&amp;#39;/page?path=index.html&amp;#39;) }) app.get(&amp;#39;/page&amp;#39;, (req, res) =&amp;gt; { let path = req.query.path //Handle queryless request  if(!</description>
    </item>
    
    <item>
      <title>RedPwnCTF 2020</title>
      <link>https://jamvie.net/post/08redpwn2020/</link>
      <pubDate>Thu, 25 Jun 2020 16:26:44 -0600</pubDate>
      
      <guid>https://jamvie.net/post/08redpwn2020/</guid>
      <description>RedPwnCTF 2020 is a beginner to intermediate CTF that&amp;rsquo;s accessible to high school and college students. The CTF featured a range of easy to harder problems, which provided both a good introduction into CTFs and an opportunity to stretch your pre-established skills. I solved through a good portion of the web problems, and will document a few of the ones here.
Let&amp;rsquo;s Begin! The problems are in no way ordered in terms of difficulty.</description>
    </item>
    
    <item>
      <title>2020 HackASat Quals</title>
      <link>https://jamvie.net/post/07hackasat/</link>
      <pubDate>Wed, 03 Jun 2020 21:47:00 -0600</pubDate>
      
      <guid>https://jamvie.net/post/07hackasat/</guid>
      <description>I participated in HackASat Quals with my team earlier in May. This was a unique CTF, as it had a category of astrodynamic mathematical problems that pertained to the geometry of earth-orbiting objects. I love math, so I actually quite enjoyed this category! 2 teammates and I collaborated together to solve a specific problem known as &amp;ldquo;I Like to Watch.&amp;rdquo; I also went through it myself and am going to discuss my solution to it.</description>
    </item>
    
  </channel>
</rss>