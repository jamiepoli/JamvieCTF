<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>insecure-deserialization on Jam // Vie</title>
    <link>https://jamvie.net/tags/insecure-deserialization/</link>
    <description>Recent content in insecure-deserialization on Jam // Vie</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC Attribution-NonCommercial 4.0 International License</copyright>
    <lastBuildDate>Tue, 22 Dec 2020 14:38:40 -0700</lastBuildDate>
    
	<atom:link href="https://jamvie.net/tags/insecure-deserialization/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Insecure Deserialization: Introduction</title>
      <link>https://jamvie.net/posts/2020/12/insecure-deserialization-introduction/</link>
      <pubDate>Tue, 22 Dec 2020 14:38:40 -0700</pubDate>
      
      <guid>https://jamvie.net/posts/2020/12/insecure-deserialization-introduction/</guid>
      <description>Insecure deserialization is a prolific vulnerability that provides a pretty straightforward gateway into unintended RCE - if you&amp;rsquo;re not careful. As of late, I&amp;rsquo;ve seen more and more CTFs employ this bug, and more real-word bug bounties deal with this kind of exploit. I figure I could provide a quick introduction into them, and hopefully ensure a few people secure their applications from this.
Context What Even is Serialization? My CPSC210 class I learned the fundamentals of object-oriented programming and the concept of complex abstractions above simple data structures: From simple arrays to instances of objects or classes, with fields and properties holding specific type values.</description>
    </item>
    
    <item>
      <title>DragonCTF 2020: Harmony Chat</title>
      <link>https://jamvie.net/posts/2020/11/dragonctf-2020-harmony-chat/</link>
      <pubDate>Sun, 22 Nov 2020 14:33:48 -0700</pubDate>
      
      <guid>https://jamvie.net/posts/2020/11/dragonctf-2020-harmony-chat/</guid>
      <description>A writeup for the first web problem, &amp;ldquo;Harmony Chat&amp;rdquo;, in DragonCTF 2020. A very fun and interesting challenge!
TL;DR  Application is vulnerable to RCE via insecure deserialization on the /csp-report endpoint Use FTP active mode to SSRF a post request to /csp-report that would open a reverse shell on the application&amp;rsquo;s HTTP server Cat flag for profit  Let&amp;rsquo;s Begin! The Harmony Chat is a Discord-esque chat app where you can /register an account and create channels.</description>
    </item>
    
  </channel>
</rss>