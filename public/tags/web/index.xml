<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Jam Polintan</title>
    <link>https://jamvie.net/tags/web/</link>
    <description>Recent content in web on Jam Polintan</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>CC Attribution-NonCommercial 4.0 International License</copyright>
    <lastBuildDate>Sun, 28 Jun 2020 21:19:19 -0600</lastBuildDate>
    
	<atom:link href="https://jamvie.net/tags/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RedPwnCTF 2020, part 2</title>
      <link>https://jamvie.net/post/09redpwn2020_02/</link>
      <pubDate>Sun, 28 Jun 2020 21:19:19 -0600</pubDate>
      
      <guid>https://jamvie.net/post/09redpwn2020_02/</guid>
      <description>Part 2 of my writeup series for RedPwnCTF 2020!
Tux-Fanpage  points: 464  Ignoring the 1990&amp;rsquo;s aesthetic of the page, observe the provided script:
const express = require(&amp;#39;express&amp;#39;) const path = require(&amp;#39;path&amp;#39;) const app = express() //Don&amp;#39;t forget to redact from published source const flag = &amp;#39;[REDACTED]&amp;#39; app.get(&amp;#39;/&amp;#39;, (req, res) =&amp;gt; { res.redirect(&amp;#39;/page?path=index.html&amp;#39;) }) app.get(&amp;#39;/page&amp;#39;, (req, res) =&amp;gt; { let path = req.query.path //Handle queryless request  if(!path || !</description>
    </item>
    
    <item>
      <title>RedPwnCTF 2020</title>
      <link>https://jamvie.net/post/08redpwn2020/</link>
      <pubDate>Thu, 25 Jun 2020 16:26:44 -0600</pubDate>
      
      <guid>https://jamvie.net/post/08redpwn2020/</guid>
      <description>RedPwnCTF 2020 is a beginner to intermediate CTF that&amp;rsquo;s accessible to high school and college students. The CTF featured a range of easy to harder problems, which provided both a good introduction into CTFs and an opportunity to stretch your pre-established skills. I solved through a good portion of the web problems, and will document a few of the ones here.
Let&amp;rsquo;s Begin! The problems are in no way ordered in terms of difficulty.</description>
    </item>
    
    <item>
      <title>CSAW 2019: Unagi</title>
      <link>https://jamvie.net/post/06csaw2019/</link>
      <pubDate>Thu, 21 May 2020 01:22:16 -0600</pubDate>
      
      <guid>https://jamvie.net/post/06csaw2019/</guid>
      <description>Back in 2019 I really got into CTFs as a matter of honing my security skills. They were fun to do and enriched my knowledge of cybersecurity - so I got into it pretty quickly.
This was among the first of the challenges I did while under my team, Maple Bacon. At the time, I had plenty experience with SQL injections and XSS attacks, but not nearly enough experience with another common vulnerability: XXE attacks.</description>
    </item>
    
    <item>
      <title>DE1ctf 2020: Hard_Pentest_1 and Animal Crossing</title>
      <link>https://jamvie.net/post/05de1ctf2020_01/</link>
      <pubDate>Thu, 07 May 2020 15:20:38 -0600</pubDate>
      
      <guid>https://jamvie.net/post/05de1ctf2020_01/</guid>
      <description>&lt;p&gt;The intersection of web-based challenges and other challenges should be expected to be seen in CTFs, but yet still I&amp;rsquo;m always surprised when I see it in action.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Plaidctf 2020: Contrived Web Problem</title>
      <link>https://jamvie.net/post/04plaidctf2020_01/</link>
      <pubDate>Tue, 28 Apr 2020 00:48:12 -0600</pubDate>
      
      <guid>https://jamvie.net/post/04plaidctf2020_01/</guid>
      <description>&lt;p&gt;This was a CTF I unfortunately didn&amp;rsquo;t have the time for, as I was busy doing finals in April :(. My team let me know about this cool and unique problem, and I&amp;rsquo;m glad they did!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>